// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieList.Areas.OlympicGames.Models;

namespace MovieList.Migrations.Country
{
    [DbContext(typeof(CountryContext))]
    [Migration("20200626012123_InitialOlympicGames")]
    partial class InitialOlympicGames
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieList.Areas.OlympicGames.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryID = "in",
                            Name = "Indoor"
                        },
                        new
                        {
                            CategoryID = "out",
                            Name = "Outdoor"
                        });
                });

            modelBuilder.Entity("MovieList.Areas.OlympicGames.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SportTypeID");

                    b.ToTable("Countrys");

                    b.HasData(
                        new
                        {
                            CountryID = "can",
                            CategoryID = "in",
                            LogoImage = "CAN.png",
                            Name = "Canada",
                            Sport = "Curling",
                            SportTypeID = "win"
                        },
                        new
                        {
                            CountryID = "swe",
                            CategoryID = "in",
                            LogoImage = "SWE.png",
                            Name = "Sweden",
                            Sport = "Curling",
                            SportTypeID = "win"
                        },
                        new
                        {
                            CountryID = "grb",
                            CategoryID = "in",
                            LogoImage = "GRB.png",
                            Name = "Great Britain",
                            Sport = "Curling",
                            SportTypeID = "win"
                        },
                        new
                        {
                            CountryID = "jam",
                            CategoryID = "out",
                            LogoImage = "JAM.png",
                            Name = "Jamaica",
                            Sport = "Bobsleigh",
                            SportTypeID = "win"
                        },
                        new
                        {
                            CountryID = "ita",
                            CategoryID = "out",
                            LogoImage = "ITA.png",
                            Name = "Italy",
                            Sport = "Bobsleigh",
                            SportTypeID = "win"
                        },
                        new
                        {
                            CountryID = "jap",
                            CategoryID = "out",
                            LogoImage = "JAP.png",
                            Name = "Japan",
                            Sport = "Bobsleigh",
                            SportTypeID = "win"
                        },
                        new
                        {
                            CountryID = "ger",
                            CategoryID = "in",
                            LogoImage = "GER.png",
                            Name = "Germany",
                            Sport = "Diving",
                            SportTypeID = "sum"
                        },
                        new
                        {
                            CountryID = "chi",
                            CategoryID = "in",
                            LogoImage = "CHI.png",
                            Name = "China",
                            Sport = "Diving",
                            SportTypeID = "sum"
                        },
                        new
                        {
                            CountryID = "mex",
                            CategoryID = "in",
                            LogoImage = "MEX.png",
                            Name = "Mexico",
                            Sport = "Diving",
                            SportTypeID = "sum"
                        },
                        new
                        {
                            CountryID = "bra",
                            CategoryID = "out",
                            LogoImage = "BRA.png",
                            Name = "Brazil",
                            Sport = "Road Cycling",
                            SportTypeID = "sum"
                        },
                        new
                        {
                            CountryID = "net",
                            CategoryID = "out",
                            LogoImage = "NET.png",
                            Name = "Netherlands",
                            Sport = "Road Cycling",
                            SportTypeID = "sum"
                        },
                        new
                        {
                            CountryID = "usa",
                            CategoryID = "out",
                            LogoImage = "USA.png",
                            Name = "USA",
                            Sport = "Road Cycling",
                            SportTypeID = "sum"
                        },
                        new
                        {
                            CountryID = "tha",
                            CategoryID = "in",
                            LogoImage = "THA.png",
                            Name = "Thailan",
                            Sport = "Archery",
                            SportTypeID = "par"
                        },
                        new
                        {
                            CountryID = "uru",
                            CategoryID = "in",
                            LogoImage = "URU.png",
                            Name = "Uruguay",
                            Sport = "Archery",
                            SportTypeID = "par"
                        },
                        new
                        {
                            CountryID = "ukr",
                            CategoryID = "in",
                            LogoImage = "UKR.png",
                            Name = "Ukraine",
                            Sport = "Archery",
                            SportTypeID = "par"
                        },
                        new
                        {
                            CountryID = "aus",
                            CategoryID = "out",
                            LogoImage = "AUS.png",
                            Name = "Austria",
                            Sport = "Canoe Sprint",
                            SportTypeID = "par"
                        },
                        new
                        {
                            CountryID = "pak",
                            CategoryID = "out",
                            LogoImage = "PAK.png",
                            Name = "Pakistan",
                            Sport = "Canoe Sprint",
                            SportTypeID = "par"
                        },
                        new
                        {
                            CountryID = "zim",
                            CategoryID = "out",
                            LogoImage = "ZIM.png",
                            Name = "Zimbabwe",
                            Sport = "Canoe Sprint",
                            SportTypeID = "par"
                        },
                        new
                        {
                            CountryID = "fra",
                            CategoryID = "in",
                            LogoImage = "FRA.png",
                            Name = "France",
                            Sport = "Breakdancing",
                            SportTypeID = "you"
                        },
                        new
                        {
                            CountryID = "cyp",
                            CategoryID = "in",
                            LogoImage = "CYP.png",
                            Name = "Cyprus",
                            Sport = "Breakdancing",
                            SportTypeID = "you"
                        },
                        new
                        {
                            CountryID = "rus",
                            CategoryID = "in",
                            LogoImage = "RUS.png",
                            Name = "Russia",
                            Sport = "Breakdancing",
                            SportTypeID = "you"
                        },
                        new
                        {
                            CountryID = "fin",
                            CategoryID = "out",
                            LogoImage = "FIN.png",
                            Name = "Finland",
                            Sport = "Skateboarding",
                            SportTypeID = "you"
                        },
                        new
                        {
                            CountryID = "slo",
                            CategoryID = "out",
                            LogoImage = "SLO.png",
                            Name = "Slovakia",
                            Sport = "Skateboarding",
                            SportTypeID = "you"
                        },
                        new
                        {
                            CountryID = "por",
                            CategoryID = "out",
                            LogoImage = "POR.png",
                            Name = "Portugal",
                            Sport = "Skateboarding",
                            SportTypeID = "you"
                        });
                });

            modelBuilder.Entity("MovieList.Areas.OlympicGames.Models.SportType", b =>
                {
                    b.Property<string>("SportTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportTypeID");

                    b.ToTable("SportTypes");

                    b.HasData(
                        new
                        {
                            SportTypeID = "sum",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            SportTypeID = "win",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            SportTypeID = "par",
                            Name = "Paralympic Games"
                        },
                        new
                        {
                            SportTypeID = "you",
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("MovieList.Areas.OlympicGames.Models.Country", b =>
                {
                    b.HasOne("MovieList.Areas.OlympicGames.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("MovieList.Areas.OlympicGames.Models.SportType", "SportType")
                        .WithMany()
                        .HasForeignKey("SportTypeID");
                });
#pragma warning restore 612, 618
        }
    }
}
